<?xml version="1.0" encoding='Windows-1251'?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN"
  "http://colorer.sf.net/2003/hrc.dtd">

<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">

 <type name="cmake">

  <region name="cmake_function" parent="def:Keyword"/>
  <region name="cmake_function_names" parent="def:Keyword"/>
  <region name="cmake_function_parameters_names" parent="def:String"/>
  <region name="cmake_function_determine_parameter_names" parent="def:Keyword"/>
  <region name="cmake_function_special_parameter_names" parent="def:String"/>
  <region name="cmake_parameters" parent="def:String"/>

  <region name="cmake_string" parent="def:StringContent"/>

  <scheme name="cmake">
    <inherit scheme="Commands" />
    <inherit scheme="Strings" />
    <inherit scheme="Expressions" />
    <inherit scheme="Keywords" />
  </scheme>

  <scheme name="FunctionParameters">
    <block start="/(\()/" end="/(\))/" scheme="FunctionParameters" region10="def:Symbol" region01="def:String" />
    <inherit scheme="Strings" />
    <regexp match="/(\{)/" region1="def:Error" region0="def:Error" />
  </scheme>

  <scheme name="Void">
  </scheme>

  <scheme name="Commands">

   <block start="/(find_path)(\()/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region03="cmake_function_special_parameter_names" /> -->
   <block start="/(find_library)(\()/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region03="cmake_function_special_parameter_names" /> -->

   <block start="/(message)(\()( *)(STATUS)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(message)(\()( *)(FATAL_ERROR)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <regexp match="/(message)(\()(.*)(\))/" region1="cmake_function_names" region3="def:Error" region2="def:PairStart" region4="def:PairEnd" />

   <block start="/(set)(\()( *)(CMAKE_CONFIGURATION_TYPES)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(CMAKE_ADDRESS_MODEL)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(CMAKE_CXX_FLAGS)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(SOLUTION_BINARY_DIR)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(EXECUTABLE_OUTPUT_PATH)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(LIBRARY_OUTPUT_PATH)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(CMAKE_RUNTIME_OUTPUT_DIRECTORY)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()( *)(BINARIES_DIRECTORY)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set)(\()/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" />
   <regexp match="/(set)(\()(.*)(\))/" region1="cmake_function_names" region3="def:Error" region2="def:PairStart" region4="def:PairEnd" />

   <block start="/(set_property)(\()( *)(TARGET)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <block start="/(set_property)(\()( *)(GLOBAL)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <regexp match="/(set_property)(\()(.*)(\))/" region1="cmake_function_names" region3="def:Error" region2="def:PairStart" region4="def:PairEnd" />

   <block start="/(cmake_minimum_required)(\()( *)(VERSION)( )/" end="/(\))/i" scheme="FunctionParameters" region00="def:Symbol" region10="def:Symbol" region01="cmake_function" region02="def:PairStart" region11="def:PairEnd" region04="cmake_function_special_parameter_names" />
   <regexp match="/(cmake_minimum_required)(\()(.*)(\))/" region1="cmake_function_names" region3="def:Error" region2="def:PairStart" region4="def:PairEnd" />

  </scheme>

  <scheme name="Strings">
   <block start="/(?{def:StringEdge}[Ll]?&#34;)/" end="/(?{def:StringEdge}&#34;)/"
          scheme="StringContent" region="def:String" inner-region="yes" region00="def:PairStart" region10="def:PairEnd" />
   <block start="/(\$\{)/" end="/(\})/" scheme="Expressions"
          region="def:String" region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
  </scheme>

  <scheme name="Expressions">
   <block start="/(macro)/i" end="/(endmacro)/i" scheme="cmake"
          region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
   <block start="/(function)/i" end="/(endfunction)/i" scheme="cmake"
          region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
   <block start="/([\n\s\r\t])(if)/i" end="/(endif)/i" scheme="cmake"
          region00="def:Symbol" region02="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
   <block start="/(^)(if)/i" end="/(endif)/i" scheme="cmake"
          region00="def:Symbol" region02="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
   <block start="/(foreach)/i" end="/(endforeach)/i" scheme="cmake"
          region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>

   <block start="/(\()/" end="/(\))/" scheme="Expressions"
          region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>
   <regexp match="/\m\#.*$/" region="def:CommentContent" />
    <inherit scheme="Strings" />
  </scheme>


  <scheme name="Keywords" >
    <keywords region="cmake_function_names" ignorecase="yes">
      <word name="project"/>
      <word name="option"/>
      <word name="add_definitions"/>
      <word name="find_package"/>
      <word name="add_subdirectory"/>
      <word name="include_directories"/>
      <word name="add_executable"/>
      <word name="target_link_libraries"/>
      <word name="add_dependencies"/>
      <word name="add_custom_command"/>
      <word name="add_library"/>
      <word name="execute_process"/>
      <word name="include"/>
    </keywords>
    <keywords region="cmake_function_parameters_names" ignorecase="no">
      <word name="QUIET"/>
      <word name="REQUIRED"/>
      <word name="NOT"/>
      <word name="STREQUAL"/>
    </keywords>
    <keywords region="cmake_parameters" ignorecase="no">
      <word name="UNIX"/>
      <word name="WIN32"/>
      <word name="MSVC10"/>
      <word name="MSVC90"/>
      <word name="MSVC80"/>
      <word name="MSVC"/>
    </keywords>
  </scheme>

  <scheme name="StringContent">
   <regexp match="/\\\\$/" region="def:Error"/>
   <regexp match="/(\%)\w+(\%)/" region="def:Const" region1="def:PairStart" region2="def:PairEnd"/>
   <regexp match="/\\[^xX\d]/" region="def:StringContent"/>
   <regexp match="/\\$/" region="def:StringContent"/>
   <regexp match="/\\x[\da-fA-F]{1,8}/i" region="def:StringContent"/>
   <regexp match="/\\[0-7]{1,12}/" region="def:StringContent"/>
   <regexp match="/\%[\-\+\#0]*?[\d\*]*(\.[\d\*]+)?[Ll]?[SsCcsuidopxXnEefgG]/" region="def:StringContent"/>
   <regexp match="/[^\\\&#34;]$/" region="def:Error"/>
   <regexp match="/\M(\$\{)([^(\})]+)(\})/" region1="def:Symbol" region3="def:Symbol" />
   <regexp match="/(\$\{)([^(\})]+)(\})\m/" region1="def:PairStart" region3="def:PairEnd" />
   <inherit scheme="TabsAsErrors"/>
  </scheme>

  <scheme name="TabsAsErrors" if="tabs-as-errors">
    <regexp match="/\t+/" region='def:Error'/>
  </scheme>
  </type>
</hrc>
